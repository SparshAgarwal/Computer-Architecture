Program 0 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_add.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_add.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memc.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping memory2c_align.syn.v, seems like a file meant for synthesis
Skipping memv.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: PFA.v additionLogic.v alu.v alu_branch.v alu_op.v alu_op_branch.v cache.v clkrst.v data_mem_system.v dff.v extendImm.v final_memory.v fourBitCLA.v four_bank_mem.v mem_system.v memc.v memory2c.v memory2c_align.v memv.v op_control.v pc_control.v proc.v proc_hier.v proc_hier_pbench.v readEnOp_Control.v reg16bit.v rf.v rf_bypass.v shifter.v simpleAlu.v sixteenBitCLA.v stallmem.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work PFA.v additionLogic.v alu.v alu_branch.v alu_op.v alu_op_branch.v cache.v clkrst.v data_mem_system.v dff.v extendImm.v final_memory.v fourBitCLA.v four_bank_mem.v mem_system.v memc.v memory2c.v memory2c_align.v memv.v op_control.v pc_control.v proc.v proc_hier.v proc_hier_pbench.v readEnOp_Control.v reg16bit.v rf.v rf_bypass.v shifter.v simpleAlu.v sixteenBitCLA.v stallmem.v
QuestaSim vlog 10.4c Compiler 2015.07 Jul 19 2015
Start time: 13:51:56 on May 09,2017
vlog "+define+RANDSEED=3" -work __work PFA.v additionLogic.v alu.v alu_branch.v alu_op.v alu_op_branch.v cache.v clkrst.v data_mem_system.v dff.v extendImm.v final_memory.v fourBitCLA.v four_bank_mem.v mem_system.v memc.v memory2c.v memory2c_align.v memv.v op_control.v pc_control.v proc.v proc_hier.v proc_hier_pbench.v readEnOp_Control.v reg16bit.v rf.v rf_bypass.v shifter.v simpleAlu.v sixteenBitCLA.v stallmem.v 
-- Compiling module PFA
-- Compiling module additionLogic
-- Compiling module alu
-- Compiling module alu_branch
-- Compiling module alu_op
-- Compiling module alu_op_branch
-- Compiling module cache
-- Compiling module clkrst
-- Compiling module data_mem_system
-- Compiling module dff
-- Compiling module extendImm
-- Compiling module final_memory
-- Compiling module fourBitCLA
-- Compiling module four_bank_mem
-- Compiling module mem_system
-- Compiling module memc
-- Compiling module memory2c
-- Compiling module memory2c_align
-- Compiling module memv
-- Compiling module op_control
-- Compiling module pc_control
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_pbench
-- Compiling module readEnOp_Control
-- Compiling module reg16bit
-- Compiling module rf
-- Compiling module rf_bypass
-- Compiling module shifter
-- Compiling module simpleAlu
-- Compiling module sixteenBitCLA
-- Compiling module stallmem

Top level modules:
	mem_system
	memory2c_align
	proc_hier_pbench
	stallmem
End time: 13:51:56 on May 09,2017, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:57 on May 09,2017
# ** Note: (vsim-3812) Design is being optimized...
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:58 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_add.asm.
Program 1 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_addi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_addi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:59 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:59 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_addi.asm.
Program 2 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andn.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andn.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:00 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:00 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andn.asm.
Program 3 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andni.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andni.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:01 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:02 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andni.asm.
Program 4 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_beqz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_beqz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:03 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 30705 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:03 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_beqz.asm.
Program 5 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bgez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bgez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:04 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 21905 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:04 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bgez.asm.
Program 6 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bltz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bltz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:06 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 29005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:06 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bltz.asm.
Program 7 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bnez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bnez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:07 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 24105 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:07 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bnez.asm.
Program 8 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_btr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_btr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:08 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:09 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_btr.asm.
Program 9 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jal.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jal.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:10 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:10 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jal.asm.
Program 10 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jalr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jalr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:11 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:11 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jalr.asm.
Program 11 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_j.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_j.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:12 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:13 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_j.asm.
Program 12 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:14 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:14 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jr.asm.
Program 13 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_lbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_lbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:15 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:16 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_lbi.asm.
Program 14 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ld.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ld.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:17 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 13605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:17 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ld.asm.
Program 15 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rol.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rol.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:18 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:18 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rol.asm.
Program 16 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_roli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_roli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:19 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:20 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_roli.asm.
Program 17 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ror.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ror.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:21 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:21 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ror.asm.
Program 18 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:22 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:22 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rori.asm.
Program 19 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sco.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sco.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:23 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:24 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sco.asm.
Program 20 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_seq.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_seq.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:25 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:25 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_seq.asm.
Program 21 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:26 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:26 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slbi.asm.
Program 22 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sle.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sle.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:27 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:27 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sle.asm.
Program 23 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sll.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sll.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:28 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:29 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sll.asm.
Program 24 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:30 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:30 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slli.asm.
Program 25 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slt.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slt.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:31 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:31 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slt.asm.
Program 26 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srl.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srl.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:32 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:33 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srl.asm.
Program 27 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:34 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:34 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srli.asm.
Program 28 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_st.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_st.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:35 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 14405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:36 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_st.asm.
Program 29 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_stu.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_stu.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:37 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 16005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:37 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_stu.asm.
Program 30 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sub.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sub.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:38 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:38 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sub.asm.
Program 31 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_subi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_subi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:39 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:40 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_subi.asm.
Program 32 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xor.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xor.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:41 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:41 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xor.asm.
Program 33 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:42 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:42 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xori.asm.
Program 34 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_add.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_add.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:43 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:43 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_add.asm.
Program 35 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_addi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_addi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:44 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:45 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_addi.asm.
Program 36 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andn.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andn.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:46 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:46 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andn.asm.
Program 37 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andni.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andni.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:47 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:47 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andni.asm.
Program 38 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_beqz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_beqz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:48 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 29105 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:49 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_beqz.asm.
Program 39 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bgez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bgez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:50 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 23605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:50 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bgez.asm.
Program 40 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bltz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bltz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:51 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 25005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:52 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bltz.asm.
Program 41 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bnez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bnez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:53 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 24405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:53 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bnez.asm.
Program 42 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_btr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_btr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:54 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:54 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_btr.asm.
Program 43 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jal.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jal.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:56 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:56 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jal.asm.
Program 44 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jalr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jalr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:57 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:52:57 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jalr.asm.
Program 45 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_j.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_j.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:52:59 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:00 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_j.asm.
Program 46 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:01 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:01 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jr.asm.
Program 47 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_lbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_lbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:02 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:02 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_lbi.asm.
Program 48 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ld.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ld.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:03 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 13605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:04 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ld.asm.
Program 49 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rol.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rol.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:05 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:05 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rol.asm.
Program 50 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_roli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_roli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:06 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:06 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_roli.asm.
Program 51 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ror.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ror.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:07 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:08 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ror.asm.
Program 52 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:08 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:09 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rori.asm.
Program 53 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sco.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sco.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:10 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:10 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sco.asm.
Program 54 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_seq.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_seq.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:11 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:11 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_seq.asm.
Program 55 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:12 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:13 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slbi.asm.
Program 56 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sle.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sle.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:14 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:14 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sle.asm.
Program 57 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sll.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sll.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:15 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:15 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sll.asm.
Program 58 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:16 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:17 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slli.asm.
Program 59 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slt.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slt.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:18 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:18 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slt.asm.
Program 60 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srl.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srl.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:19 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:19 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srl.asm.
Program 61 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:20 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:21 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srli.asm.
Program 62 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_st.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_st.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:22 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 13605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:22 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_st.asm.
Program 63 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_stu.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_stu.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:23 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 16005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:23 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_stu.asm.
Program 64 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sub.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sub.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:24 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:25 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sub.asm.
Program 65 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_subi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_subi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:26 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:26 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_subi.asm.
Program 66 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xor.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xor.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:27 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:27 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xor.asm.
Program 67 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:28 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:28 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xori.asm.
Program 68 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_add.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_add.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:29 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:30 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_add.asm.
Program 69 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_addi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_addi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:31 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:31 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_addi.asm.
Program 70 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andn.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andn.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:32 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:32 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andn.asm.
Program 71 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andni.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andni.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:33 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:33 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andni.asm.
Program 72 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_beqz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_beqz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:34 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 31005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:35 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_beqz.asm.
Program 73 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bgez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bgez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:36 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 20405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:36 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bgez.asm.
Program 74 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bltz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bltz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:37 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 17505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:37 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bltz.asm.
Program 75 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bnez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bnez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:38 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 21205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:39 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bnez.asm.
Program 76 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_btr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_btr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:40 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:40 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_btr.asm.
Program 77 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jal.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jal.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:41 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:42 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jal.asm.
Program 78 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jalr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jalr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:43 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:43 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jalr.asm.
Program 79 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_j.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_j.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:44 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:44 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_j.asm.
Program 80 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:45 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:46 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jr.asm.
Program 81 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_lbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_lbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:47 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:47 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_lbi.asm.
Program 82 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ld.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ld.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:48 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 13605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:49 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ld.asm.
Program 83 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rol.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rol.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:50 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:50 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rol.asm.
Program 84 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_roli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_roli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:51 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:51 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_roli.asm.
Program 85 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ror.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ror.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:52 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:53 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ror.asm.
Program 86 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:54 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:54 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rori.asm.
Program 87 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sco.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sco.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:55 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:55 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sco.asm.
Program 88 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_seq.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_seq.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:56 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:57 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_seq.asm.
Program 89 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:58 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:58 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slbi.asm.
Program 90 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sle.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sle.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:53:59 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:53:59 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sle.asm.
Program 91 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sll.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sll.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:00 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:01 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sll.asm.
Program 92 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:02 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:02 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slli.asm.
Program 93 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slt.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slt.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:03 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:03 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slt.asm.
Program 94 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srl.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srl.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:04 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:05 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srl.asm.
Program 95 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:05 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:06 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srli.asm.
Program 96 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_st.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_st.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:07 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:07 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_st.asm.
Program 97 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_stu.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_stu.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:08 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 16805 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:08 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_stu.asm.
Program 98 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sub.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sub.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:09 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:10 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sub.asm.
Program 99 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_subi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_subi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:11 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:11 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_subi.asm.
Program 100 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xor.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xor.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:12 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:12 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xor.asm.
Program 101 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:13 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:14 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xori.asm.
Program 102 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_add.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_add.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:14 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:15 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_add.asm.
Program 103 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_addi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_addi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:16 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:16 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_addi.asm.
Program 104 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andn.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andn.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:17 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:17 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andn.asm.
Program 105 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andni.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andni.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:18 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:19 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andni.asm.
Program 106 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_beqz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_beqz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:20 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 29305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:21 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_beqz.asm.
Program 107 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bgez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bgez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:22 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 24205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:23 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bgez.asm.
Program 108 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bltz.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bltz.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:24 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 27305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:24 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bltz.asm.
Program 109 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bnez.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bnez.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:25 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 24205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:26 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bnez.asm.
Program 110 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_btr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_btr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:27 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5605 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:27 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_btr.asm.
Program 111 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jal.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jal.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:29 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:29 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jal.asm.
Program 112 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jalr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jalr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:30 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:30 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jalr.asm.
Program 113 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_j.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_j.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:31 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:31 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_j.asm.
Program 114 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jr.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jr.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:32 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 15205 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:33 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jr.asm.
Program 115 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_lbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_lbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:34 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:34 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_lbi.asm.
Program 116 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ld.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ld.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:35 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 14405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:35 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ld.asm.
Program 117 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rol.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rol.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:36 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:37 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rol.asm.
Program 118 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_roli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_roli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:38 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:38 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_roli.asm.
Program 119 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ror.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ror.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:39 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:39 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ror.asm.
Program 120 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:40 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:41 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rori.asm.
Program 121 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sco.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sco.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:42 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:42 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sco.asm.
Program 122 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_seq.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_seq.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:43 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:43 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_seq.asm.
Program 123 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slbi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slbi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:44 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:45 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slbi.asm.
Program 124 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sle.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sle.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:46 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:46 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sle.asm.
Program 125 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sll.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sll.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:47 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:47 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sll.asm.
Program 126 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:48 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:48 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slli.asm.
Program 127 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slt.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slt.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:49 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:50 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slt.asm.
Program 128 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srl.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srl.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:51 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:51 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srl.asm.
Program 129 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srli.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srli.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:52 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:52 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srli.asm.
Program 130 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_st.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_st.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:53 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 14405 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:54 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_st.asm.
Program 131 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_stu.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_stu.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:55 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 16005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:55 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_stu.asm.
Program 132 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sub.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sub.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:56 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:56 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sub.asm.
Program 133 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_subi.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_subi.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:57 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:58 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_subi.asm.
Program 134 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xor.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xor.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:54:59 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:54:59 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xor.asm.
Program 135 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xori.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xori.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:55:00 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:55:00 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xori.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_add.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_addi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andn.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_andni.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_beqz.asm SUCCESS CPI:16.2 CYCLES:308 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bgez.asm SUCCESS CPI:11.6 CYCLES:220 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bltz.asm SUCCESS CPI:15.3 CYCLES:291 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_bnez.asm SUCCESS CPI:12.7 CYCLES:242 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_btr.asm SUCCESS CPI:1.7 CYCLES:57 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_j.asm SUCCESS CPI:40.6 CYCLES:41 ICOUNT:1 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jal.asm SUCCESS CPI:2.4 CYCLES:41 ICOUNT:17 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jalr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_jr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_lbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ld.asm SUCCESS CPI:2.8 CYCLES:137 ICOUNT:49 IHITRATE: 100.0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rol.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_roli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_ror.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_rori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sco.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_seq.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sle.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sll.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_slt.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srl.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_srli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_st.asm SUCCESS CPI:4.4 CYCLES:145 ICOUNT:33 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_stu.asm SUCCESS CPI:3.3 CYCLES:161 ICOUNT:49 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_sub.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_subi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xor.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_1_xori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_add.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_addi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andn.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_andni.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_beqz.asm SUCCESS CPI:15.4 CYCLES:292 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bgez.asm SUCCESS CPI:12.5 CYCLES:237 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bltz.asm SUCCESS CPI:13.2 CYCLES:251 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_bnez.asm SUCCESS CPI:12.9 CYCLES:245 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_btr.asm SUCCESS CPI:1.7 CYCLES:57 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_j.asm SUCCESS CPI:40.6 CYCLES:41 ICOUNT:1 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jal.asm SUCCESS CPI:2.4 CYCLES:41 ICOUNT:17 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jalr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_jr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_lbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ld.asm SUCCESS CPI:2.8 CYCLES:137 ICOUNT:49 IHITRATE: 100.0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rol.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_roli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_ror.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_rori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sco.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_seq.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sle.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sll.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_slt.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srl.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_srli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_st.asm SUCCESS CPI:4.2 CYCLES:137 ICOUNT:33 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_stu.asm SUCCESS CPI:3.3 CYCLES:161 ICOUNT:49 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_sub.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_subi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xor.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_2_xori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_add.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_addi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andn.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_andni.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_beqz.asm SUCCESS CPI:16.4 CYCLES:311 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bgez.asm SUCCESS CPI:10.8 CYCLES:205 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bltz.asm SUCCESS CPI:9.3 CYCLES:176 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_bnez.asm SUCCESS CPI:11.2 CYCLES:213 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_btr.asm SUCCESS CPI:1.7 CYCLES:57 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_j.asm SUCCESS CPI:40.6 CYCLES:41 ICOUNT:1 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jal.asm SUCCESS CPI:2.4 CYCLES:41 ICOUNT:17 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jalr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_jr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_lbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ld.asm SUCCESS CPI:2.8 CYCLES:137 ICOUNT:49 IHITRATE: 100.0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rol.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_roli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_ror.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_rori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sco.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_seq.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sle.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sll.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_slt.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srl.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_srli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_st.asm SUCCESS CPI:4.6 CYCLES:153 ICOUNT:33 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_stu.asm SUCCESS CPI:3.4 CYCLES:169 ICOUNT:49 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_sub.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_subi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xor.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_3_xori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_add.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_addi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andn.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_andni.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_beqz.asm SUCCESS CPI:15.5 CYCLES:294 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bgez.asm SUCCESS CPI:12.8 CYCLES:243 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bltz.asm SUCCESS CPI:14.4 CYCLES:274 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_bnez.asm SUCCESS CPI:12.8 CYCLES:243 ICOUNT:19 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_btr.asm SUCCESS CPI:1.7 CYCLES:57 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_j.asm SUCCESS CPI:40.6 CYCLES:41 ICOUNT:1 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jal.asm SUCCESS CPI:2.4 CYCLES:41 ICOUNT:17 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jalr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_jr.asm SUCCESS CPI:2.4 CYCLES:153 ICOUNT:65 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_lbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ld.asm SUCCESS CPI:3.0 CYCLES:145 ICOUNT:49 IHITRATE: 100.0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rol.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_roli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_ror.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_rori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sco.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_seq.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slbi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sle.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sll.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_slt.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srl.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_srli.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_st.asm SUCCESS CPI:4.4 CYCLES:145 ICOUNT:33 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_stu.asm SUCCESS CPI:3.3 CYCLES:161 ICOUNT:49 IHITRATE: 0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_sub.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_subi.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xor.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/rand_simple/t_4_xori.asm SUCCESS CPI:1.2 CYCLES:41 ICOUNT:33 IHITRATE: 0 DHITRATE: 0
