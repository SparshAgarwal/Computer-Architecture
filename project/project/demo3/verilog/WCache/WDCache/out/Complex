Program 0 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/branchTest.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/branchTest.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Skipping final_memory.syn.v, seems like a file meant for synthesis
Skipping memc.syn.v, seems like a file meant for synthesis
Skipping memory2c.syn.v, seems like a file meant for synthesis
Skipping memory2c_align.syn.v, seems like a file meant for synthesis
Skipping memv.syn.v, seems like a file meant for synthesis
Skipping stallmem.syn.v, seems like a file meant for synthesis
-------------------------------------------------
Step: 2
Compiling the following verilog files: PFA.v additionLogic.v alu.v alu_branch.v alu_op.v alu_op_branch.v cache.v clkrst.v data_mem_system.v dff.v extendImm.v final_memory.v fourBitCLA.v four_bank_mem.v mem_system.v memc.v memory2c.v memory2c_align.v memv.v op_control.v pc_control.v proc.v proc_hier.v proc_hier_pbench.v readEnOp_Control.v reg16bit.v rf.v rf_bypass.v shifter.v simpleAlu.v sixteenBitCLA.v stallmem.v 
Top module: proc_hier_pbench
Compilation log in wsrun.log
Executing rm -rf __work dump.wlf dump.vcd diff.trace diff.ptrace archsim.trace archsim.ptrace verilogsim.trace verilogsim.ptrace
Executing vlib __work
Executing vlog +define+RANDSEED=3 -work __work PFA.v additionLogic.v alu.v alu_branch.v alu_op.v alu_op_branch.v cache.v clkrst.v data_mem_system.v dff.v extendImm.v final_memory.v fourBitCLA.v four_bank_mem.v mem_system.v memc.v memory2c.v memory2c_align.v memv.v op_control.v pc_control.v proc.v proc_hier.v proc_hier_pbench.v readEnOp_Control.v reg16bit.v rf.v rf_bypass.v shifter.v simpleAlu.v sixteenBitCLA.v stallmem.v
QuestaSim vlog 10.4c Compiler 2015.07 Jul 19 2015
Start time: 13:51:49 on May 09,2017
vlog "+define+RANDSEED=3" -work __work PFA.v additionLogic.v alu.v alu_branch.v alu_op.v alu_op_branch.v cache.v clkrst.v data_mem_system.v dff.v extendImm.v final_memory.v fourBitCLA.v four_bank_mem.v mem_system.v memc.v memory2c.v memory2c_align.v memv.v op_control.v pc_control.v proc.v proc_hier.v proc_hier_pbench.v readEnOp_Control.v reg16bit.v rf.v rf_bypass.v shifter.v simpleAlu.v sixteenBitCLA.v stallmem.v 
-- Compiling module PFA
-- Compiling module additionLogic
-- Compiling module alu
-- Compiling module alu_branch
-- Compiling module alu_op
-- Compiling module alu_op_branch
-- Compiling module cache
-- Compiling module clkrst
-- Compiling module data_mem_system
-- Compiling module dff
-- Compiling module extendImm
-- Compiling module final_memory
-- Compiling module fourBitCLA
-- Compiling module four_bank_mem
-- Compiling module mem_system
-- Compiling module memc
-- Compiling module memory2c
-- Compiling module memory2c_align
-- Compiling module memv
-- Compiling module op_control
-- Compiling module pc_control
-- Compiling module proc
-- Compiling module proc_hier
-- Compiling module proc_hier_pbench
-- Compiling module readEnOp_Control
-- Compiling module reg16bit
-- Compiling module rf
-- Compiling module rf_bypass
-- Compiling module shifter
-- Compiling module simpleAlu
-- Compiling module sixteenBitCLA
-- Compiling module stallmem

Top level modules:
	mem_system
	memory2c_align
	proc_hier_pbench
	stallmem
End time: 13:51:49 on May 09,2017, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:49 on May 09,2017
# ** Note: (vsim-3812) Design is being optimized...
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# Error signal asserted
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4805 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:50 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 4
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 5
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 6
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/branchTest.asm.
Program 1 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/easyTest.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/easyTest.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:51 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 18305 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:51 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/easyTest.asm.
Program 2 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/firstTest.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/firstTest.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:52 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5105 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:53 on May 09,2017, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/firstTest.asm.
Program 3 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/loadStoreTest.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/loadStoreTest.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:54 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 6505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:54 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/loadStoreTest.asm.
Program 4 /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/shiftTest.asm
-------------------------------------------------
Step: 1
Compiling /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/shiftTest.asm
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
-------------------------------------------------
Step: 2
Running Verilog simulation...details in wsrun.log
Reading pref.tcl

# 10.4c

# vsim -c proc_hier_pbench -lib __work -voptargs="+acc" -wlf dump.wlf -do "log -howmany -rec /* ; run -all" 
# Start time: 13:51:55 on May 09,2017
# ** Note: (vsim-8009) Loading existing optimized design _opt
# //  Questa Sim
# //  Version 10.4c linux Jul 19 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# Loading work.proc_hier_pbench(fast)
# Loading work.proc_hier(fast)
# Loading work.clkrst(fast)
# Loading work.proc(fast)
# Loading work.memory2c(fast)
# Loading work.pc_control(fast)
# Loading work.simpleAlu(fast)
# Loading work.additionLogic(fast)
# Loading work.sixteenBitCLA(fast)
# Loading work.fourBitCLA(fast)
# Loading work.PFA(fast)
# Loading work.readEnOp_Control(fast)
# Loading work.dff(fast)
# Loading work.op_control(fast)
# Loading work.rf_bypass(fast)
# Loading work.rf(fast)
# Loading work.reg16bit(fast)
# Loading work.extendImm(fast)
# Loading work.alu_op_branch(fast)
# Loading work.alu_branch(fast)
# Loading work.alu_op(fast)
# Loading work.alu(fast)
# Loading work.shifter(fast)
# Loading work.data_mem_system(fast)
# Loading work.cache(fast)
# Loading work.memc(fast)
# Loading work.memc(fast__1)
# Loading work.memc(fast__2)
# Loading work.memv(fast)
# Loading work.cache(fast__1)
# Loading work.four_bank_mem(fast)
# Loading work.final_memory(fast)
# log -howmany -rec /* 
# 5194
#  run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# Error
# Error
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 10505 ns  Iteration: 0  Instance: /proc_hier_pbench
# End time: 13:51:55 on May 09,2017, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
-------------------------------------------------
Step: 3
Verilog simulation successful
See verilogsim.log and verilogsim.ptrace for output
Created a dump file dump.wlf.
To view waveforms, open with
vsim -view dataset=dump.wlf
-------------------------------------------------
Step: 4
Running arch simulator wiscalculator...
-------------------------------------------------
Step: 5
Comparing arch simulation trace against verilog simulation trace
SUCCESS. Simulations match for /u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/shiftTest.asm.
-------------------------------------------------
Final log, saved in summary.log
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/branchTest.asm SUCCESS CPI:2.3 CYCLES:49 ICOUNT:21 IHITRATE: 0 DHITRATE: 0.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/easyTest.asm SUCCESS CPI:4.5 CYCLES:184 ICOUNT:41 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/firstTest.asm SUCCESS CPI:1.3 CYCLES:52 ICOUNT:41 IHITRATE: 0 DHITRATE: 0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/loadStoreTest.asm SUCCESS CPI:2.2 CYCLES:66 ICOUNT:30 IHITRATE: 100.0 DHITRATE: 100.0
/u/k/a/karu/courses/cs552/spring2013/handouts/testprograms/public/complex_demo1/shiftTest.asm SUCCESS CPI:1.1 CYCLES:106 ICOUNT:98 IHITRATE: 0 DHITRATE: 0.0
